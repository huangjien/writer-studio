[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "writer-studio"
version = "0.1.3"
description = "Writer Studio is a platform for writing and editing documents."
readme = "README.md"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.120.0",
    "uvicorn[standard]==0.30.0",
    "httpx==0.27.0",
    "PyYAML==6.0.1",
    "pydantic>=2.10.0",
    "aiosqlite==0.20.0",
    "cachetools==5.3.3",
    "anyio==4.11.0",
    "certifi==2025.10.5",
    "click==8.3.0",
    "h11==0.16.0",
    "httpcore==1.0.9",
    "idna==3.11",
    "sniffio==1.3.1",
    "starlette==0.40.0",
    "typing-extensions==4.15.0",
    "python-multipart==0.0.9",
    "sqlite-vec==0.1.6",
]

[project.optional-dependencies]
dev = [
  "pytest==8.3.2",
  "pytest-cov==5.0.0",
  "pytest-asyncio==0.23.8",
  "black==24.8.0",
  "isort==5.13.2",
  "flake8==7.1.1",
]
autogen-stable = [
  "autogen-agentchat==0.7.5",
  "autogen-ext[openai,mcp]==0.7.5",
]

[project.scripts]
novel-eval = "writer_studio.cli.evaluate_chapter:main"

[tool.black]
line-length = 100
target-version = ["py313"]

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
  ".git",
  "__pycache__",
  ".venv",
  "venv",
  "build",
  "dist",
]

[tool.pytest.ini_options]
addopts = [
  "--cov=src",
  "--cov-report=term-missing",
  "--cov-report=html:reports/htmlcov",
]
testpaths = ["tests"]
markers = ["asyncio"]
asyncio_mode = "auto"
filterwarnings = [
  "ignore::DeprecationWarning:pytest_asyncio.plugin",
]

[tool.coverage.run]
branch = true
source = ["src"]
omit = [
  "tests/*",
  "*/__init__.py",
  # Exclude external integrations and heavy orchestration layers from coverage
  "src/services/mcp_client.py",
  "src/services/mcp_manager.py",
  "src/tools/providers/local_fetch.py",
  "src/services/tool_service.py",
  "src/services/knowledge_service.py",
  "src/services/embedding_service.py",
]

[tool.coverage.report]
show_missing = true
skip_covered = false
precision = 0

[tool.coverage.html]
directory = "reports/htmlcov"
